name: CI

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    defaults:
      run:
        shell: bash -elo pipefail {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: pyproject.toml
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync
          uv pip check
          uv pip list
          uv pip show osmnx
          uv run python --version

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-${{ matrix.os }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit checks
        run: uv run pre-commit run --all-files
        env:
          SKIP: no-commit-to-branch

      - name: Test notebooks
        run: |
          cd ./notebooks
          uv run python -c "import osmnx; print(osmnx.__version__)"
          uv run jupyter nbconvert --to python *.ipynb
          for filename in *.py; do uv run ipython "$filename"; done
